version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
    depends_on:
      - mongodb
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - FRONTEND_HOST=${FRONTEND_HOST}
      - NEXT_PUBLIC_FRONTEND_HOST=${NEXT_PUBLIC_FRONTEND_HOST}
      - SESSION_SECRET=${SESSION_SECRET}
      - ENVIRONMENT=${ENVIRONMENT}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    depends_on:
      - backend
    networks:
      - app-network
  
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONTO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge