{"openapi": "3.1.0", "info": {"title": "FMB-NCM", "version": "0.1.0"}, "paths": {"/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests.", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token.", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Users-Read Users"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create a new user.", "operationId": "users-create_user", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["users"], "summary": "Delete User Me", "description": "Delete own user.", "operationId": "users-delete_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "description": "Update own password.", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/signup": {"post": {"tags": ["users"], "summary": "Register User", "description": "Create new user without the need to be logged in.", "operationId": "users-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "objectid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "objectid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "objectid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/posts/": {"get": {"tags": ["posts"], "summary": "Read Posts", "description": "Retrieve posts.", "operationId": "posts-read_posts", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["posts"], "summary": "Create Post", "description": "Create new post.", "operationId": "posts-create_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/posts/{id}": {"put": {"tags": ["posts"], "summary": "Update Post", "description": "Update an post.", "operationId": "posts-update_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "objectid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PostPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["posts"], "summary": "Delete Post", "description": "Delete a post.", "operationId": "posts-delete_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "objectid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/private/users/": {"post": {"tags": ["private"], "summary": "Create User", "description": "Create a new user.", "operationId": "private-create_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrivateUserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Message": {"properties": {"_id": {"anyOf": [{"type": "string", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message"}, "Post": {"properties": {"_id": {"type": "string", "format": "objectid", "title": "Id", "primary_key": true}, "title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "body": {"type": "string", "maxLength": 1000, "minLength": 1, "title": "Body"}, "owner": {"anyOf": [{"properties": {"id": {"type": "string", "title": "Id"}, "collection": {"type": "string", "title": "Collection"}}, "type": "object", "required": ["id", "collection"]}, {"additionalProperties": true, "type": "object"}], "title": "Owner"}, "owner_id": {"type": "string", "format": "objectid", "title": "Owner Id"}}, "type": "object", "required": ["owner", "owner_id"], "title": "Post"}, "PostCreate": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "body": {"type": "string", "maxLength": 1000, "minLength": 1, "title": "Body"}, "owner": {"anyOf": [{"properties": {"id": {"type": "string", "title": "Id"}, "collection": {"type": "string", "title": "Collection"}}, "type": "object", "required": ["id", "collection"]}, {"additionalProperties": true, "type": "object"}], "title": "Owner"}, "owner_id": {"type": "string", "format": "objectid", "title": "Owner Id"}}, "type": "object", "required": ["owner", "owner_id"], "title": "PostCreate"}, "PostPublic": {"properties": {"_id": {"anyOf": [{"type": "string", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "body": {"type": "string", "maxLength": 1000, "minLength": 1, "title": "Body"}, "owner": {"anyOf": [{"$ref": "#/components/schemas/UserPublic"}, {"type": "null"}]}, "owner_id": {"anyOf": [{"type": "string", "format": "objectid"}, {"type": "null"}], "title": "Owner Id"}, "data": {"items": {"$ref": "#/components/schemas/Post"}, "type": "array", "title": "Data"}, "total_count": {"type": "integer", "title": "Total Count"}}, "type": "object", "required": ["data", "total_count"], "title": "PostPublic"}, "PostUpdate": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "title": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Title"}, "body": {"anyOf": [{"type": "string", "maxLength": 750, "minLength": 1}, {"type": "null"}], "title": "Body"}, "owner": {"anyOf": [{"properties": {"id": {"type": "string", "title": "Id"}, "collection": {"type": "string", "title": "Collection"}}, "type": "object", "required": ["id", "collection"]}, {"additionalProperties": true, "type": "object"}], "title": "Owner"}, "owner_id": {"anyOf": [{"type": "string", "format": "objectid"}, {"type": "null"}], "title": "Owner Id"}}, "type": "object", "required": ["owner"], "title": "PostUpdate"}, "PrivateUserCreate": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "username": {"type": "string", "title": "Username"}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}}, "type": "object", "required": ["email", "password", "username"], "title": "PrivateUserCreate"}, "Token": {"properties": {"_id": {"anyOf": [{"type": "string", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token"}, "UpdatePassword": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "current_password": {"type": "string", "maxLength": 40, "minLength": 12, "title": "Current Password"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 12, "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword"}, "UserCreate": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "username": {"type": "string", "maxLength": 123, "minLength": 2, "title": "Username", "unique": true}, "email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "password": {"type": "string", "maxLength": 40, "minLength": 12, "title": "Password"}}, "type": "object", "required": ["username", "email", "password"], "title": "UserCreate"}, "UserPublic": {"properties": {"_id": {"type": "string", "format": "objectid", "title": "Id"}, "username": {"type": "string", "title": "Username"}, "email": {"type": "string", "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active"}, "is_superuser": {"type": "boolean", "title": "Is Superuser"}}, "type": "object", "required": ["_id", "username", "email", "is_active", "is_superuser"], "title": "UserPublic"}, "UserRegister": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 40, "minLength": 12, "title": "Password"}, "username": {"type": "string", "maxLength": 123, "minLength": 2, "title": "Username", "unique": true}}, "type": "object", "required": ["email", "password", "username"], "title": "UserRegister"}, "UserUpdate": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "password": {"anyOf": [{"type": "string", "minLength": 12}, {"type": "null"}], "title": "Password"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "is_superuser": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Superuser"}, "username": {"anyOf": [{"type": "string", "maxLength": 123, "minLength": 2}, {"type": "null"}], "title": "Username"}}, "type": "object", "title": "UserUpdate"}, "UserUpdateMe": {"properties": {"_id": {"anyOf": [{"type": "string", "maxLength": 24, "minLength": 24, "pattern": "^[0-9a-f]{24}$", "example": "5eb7cf5a86d9755df3a6c593"}, {"type": "null"}], "title": "Id", "description": "MongoDB document ObjectID"}, "username": {"anyOf": [{"type": "string", "maxLength": 123, "minLength": 2}, {"type": "null"}], "title": "Username"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}}, "type": "object", "title": "UserUpdateMe"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}
